name: Build

on:
  push:
    branches: [ master ]

env:
  nmsVersion: "1.12.2"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Grant Gradlew Permissions
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew shadowjar
        env:
          TECHSCODE_USERNAME: ${{ secrets.TECHSCODE_USERNAME }}
          TECHSCODE_PASSWORD: ${{ secrets.TECHSCODE_PASSWORD }}

      - name: Retrieve Project Name & Version
        id: project
        run: |
          echo "projectName=$(./gradlew properties | grep ^name: | cut -c 7-)" >> $GITHUB_ENV
          echo "projectVersion=$(./gradlew properties | grep ^version: | cut -c 10-)" >> $GITHUB_ENV
        env:
          TECHSCODE_USERNAME: ${{ secrets.TECHSCODE_USERNAME }}
          TECHSCODE_PASSWORD: ${{ secrets.TECHSCODE_PASSWORD }}

      - name: Check if version has changed
        id: version_check
        run: |
          OLD_VERSION=$(git show HEAD~1:./gradlew properties | grep ^version: | cut -c 10-)
          NEW_VERSION=$(./gradlew properties | grep ^version: | cut -c 10-)
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "::set-output name=versionChanged::true"
          else
            echo "::set-output name=versionChanged::false"
          fi
        env:
          TECHSCODE_USERNAME: ${{ secrets.TECHSCODE_USERNAME }}
          TECHSCODE_PASSWORD: ${{ secrets.TECHSCODE_PASSWORD }}

      - name: Publish with Gradle
        if: ${{ steps.version_check.outputs.versionChanged == 'true' }}
        run: ./gradlew publish
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          TECHSCODE_USERNAME: ${{ secrets.TECHSCODE_USERNAME }}
          TECHSCODE_PASSWORD: ${{ secrets.TECHSCODE_PASSWORD }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{ github.run_number }}
          release_name: Release ${{ env.projectVersion }} build-${{ github.run_number }}
          body: ${{ join(github.event.commits.*.message, ' || ') }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: 'build/${{ env.projectName }}-${{ env.projectVersion }}.jar'
          asset_name: '${{ env.projectName }}-${{ env.projectVersion }}.jar'
          asset_content_type: application/java-archive